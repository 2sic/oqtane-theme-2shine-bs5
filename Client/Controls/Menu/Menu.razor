@inherits Oqtane.Themes.Controls.MenuBase
@implements IMenuConfig
@*
File Purpose:       Add a menu based on the parameter 'ConfigName'
Recommendations:    -
Nice to know:       
    - Prepares the menu structure and then renders using one of various menu controls
    - Can be configured directly on the tag, or can load a config from JSON
    - Implements IMenuConfig so it can be a config, or can specify the name of a config to load
    - WIP: Later it will also be able to load a config from the page/theme settings
*@
@switch (ConfigName)
{
    case ThemePackageSettings.MenuMobile:
        <MenuMobile MenuBranch="@MenuTree"></MenuMobile>
        break;
    case ThemePackageSettings.MenuSidebar:
        <MenuSidebar MenuBranch="@MenuTree"></MenuSidebar>
        break;
    case ThemePackageSettings.MenuMain:
    default:
        <MenuDefault MenuBranch="@MenuTree"></MenuDefault>
        break;
}
@code {
    [Inject] protected MenuTreeService<ThemePackageSettings> MenuTreeService { get; set; }

    /// <summary>
    /// todo
    /// </summary>
    [Parameter] public string Id { get; set; }
    [Parameter] public string ConfigName { get; set; }
    [Parameter] public List<int> PageList { get; set; }
    [Parameter] public bool? Children { get; set; }
    [Parameter] public int? Depth { get; set; }
    [Parameter] public bool Debug { get; set; } = false;
    [Parameter] public bool? Display { get; set; } = true;
    [Parameter] public int? Level { get; set; }
    [Parameter] public string Start { get; set; }
    [Parameter] public string Design { get; set; }

    protected MenuBranch MenuTree { get; private set; }

    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        // TODO: CHANGE HOW IT GETS THE DEFAULTS
        MenuTree = MenuTreeService.GetTree(new MenuConfig(this), PageState, MenuPages.ToList());
    }
}
