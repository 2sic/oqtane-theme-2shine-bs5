@inherits ThemeControlBase
@using System.Globalization
@using ToSic.Oqt.Themes.ToShineBs5.Client.Services
@inject Services.LanguageService LanguageService
@*
    File Purpose:       Show the Language Navigation / Selector
    Recommendations:    -
    Nice to know:       The languages available are handed in from the Header file
                        ...if the list is empty, it will use the site definition
                        ...otherwise it will use the values specified for order/label of languages
    WishList:
    - make languages more configurable
    - make the show/hide of this also configurable
*@
@if (SupportedCultures?.Count > 1)
{
    @foreach (var culture in SupportedCultures)
    {
        <ul class="to-shine-page-language">
            <li class="@(CultureInfo.CurrentUICulture.Name == culture.Code ? "active" : "")">
                <a href="#" 
                   @onclick="@(async _ => await LanguageService.SetCultureAsync(culture.Code))"
                   title="@culture.Description"
                   >@culture.Label</a>
            </li>
        </ul>
    }
}

@code{
    // List of languages to show, controlled by the skin
    // Will automatically use system languages if not specified
    [Parameter]
    public string Languages { get; set; }

    protected List<LanguageButtonModel> SupportedCultures;
    
    protected override async Task OnParametersSetAsync()
    {
        await base.OnParametersSetAsync();

        // Load defined language list. It change unless the page is reloaded, so we can cache it on this control
        SupportedCultures ??= await LanguageService.LanguagesToShow(PageState, Languages);
    }
}