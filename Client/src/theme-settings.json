{
  "$schema": "../json-schemas/theme-configurations-schema.json",
  /* This file contains configuration for the menus in the layout. 
   * It allows you to make most changes to menus without recompiling the source code, 
   * thereby letting designers quickly build their theme
   * It has three sections:
   * - Version is simply a version number, to better control when the code expects a different structure
   * - Menus which uses a string-key to identify a configuration, and determins which pages should be shown
   * - Designs uses a string key as well, and determines look and feel through CSS-Classes added to the HTML
   *
   * Note: This is a JSON file but the parser will treat it as JSONC, so you can add comments
  */
  // ********************************************************************************

  /*
    Important: We're dropping most of the comments in the file, 
    since we're creating a schema which will give you more information on mouse-over.
  */

  "Version": 0.01,

  "Debug": {
    "Allowed": true,
    "Admin": true,
    "Anonymous": true
  },

  // ********************************************************************************

  // Theme Configurations
  "Themes": {
    // Default Theme - in most cases you'll just use this theme configuration
    "Default": {
      // Optional: Design Names with "=" mean they inherit / use the name already existing - in this case "Default"
      "Design": "=",
      "Logo": "[Theme.Url]/assets/logo.svg",
      "LanguagesMin": 1,
      "Parts": {
        // Show breadcrumbs. Note that on home it won't be visible due to CSS rules + MagicContext)
        "Breadcrumbs": true,
        // Show languages menu and use the same languages configuration name as this theme - in this case "Default"
        "Languages": true,
        // Don't show sidebar menu in the default configuration
        "Menu-Sidebar": false,
        "example-with-name": "config-name",
        // Example of a more detailed setting in case you want to control everything
        "example-part-config": {
          "Show": true,
          "Design": "=",
          "Configuration": "special-config"
        }
      },
      "MagicContextInBody": false,
      "Debug": {
        "Admin": true
      }
    },
    // The example below shows how the "Sidebar" configuration switches to a different menu
    // Layout showing the submenu in the sidebar, so we don't need to show more items in the main menu
    "Sidebar": {
      // Re-use all previous settings
      "@inherits": "Default",
      "Parts": {
        // Override showing the sidebar menu
        "Menu-Sidebar": true,
        // Example override showing how to switch to another language menu configuration
        "Languages": "EnglishOnly",
        // Override main-menu settings to switch to another menu configuration and design
        "Menu-Main": "TopLevelOnly"
      }
    }
  },

  // ********************************************************************************

  "ThemeDesigns": {
    // This is the default design which is used unless explicitly specified
    "Default": {
      "MagicContext": [
        "page-[Page.Id]",
        "page-root-[Page.RootId]",
        "page-parent-[Page.ParentId]",
        "site-[Site.Id]",
        "nav-level-[Menu.Level]",
        "theme-mainnav-variation-right",
        "theme-variation-[Layout.Variation]"
      ],
      "PageIsHome": "page-is-home",
      "PaneIsEmpty": "pane-is-empty",
      "MagicContextTagId": "cre8magic-root",

      // Custom values / classes as you need them in your code
      "Custom": {
        // Panes - uses the Pane-name to find the configuration
        "Pane-Default": "",
        "Pane-Header": {
          "classes": "container px-0",
          "id": "theme-page-header-pane"
        },

        // Sections - ATM "Main" only
        "Main": {
          "id": "theme-page-main"
        },

        // This config is used with sidebar-menu, places the body to the right, the menu to the left
        "sidebar-body": "col-12 col-lg-9 order-lg-2",
        "menu-sidebar": "col-12 col-lg-3 order-lg-1",
        "menu-sidebar-inner": {
          "classes": "d-none d-sm-block",
          "id": "theme-nav-sub"
        },

        // Buttons / Icons and Logins
        "edit-icon": "theme-ui-button edit",
        "admin-icon": "theme-ui-button gear",
        "login-icon": "theme-ui-button lock",
        "login-invisible": "theme-login-invisible d-none d-lg-inline-flex",

        // Logo & ToTop
        "logo": "logo",
        "to-top": {
          "id": "theme-to-top"
        },

        // Languages - the li-node should be able to do active/passive if necessary
        "languages-li": {
          "isActive": "active"
        },

        // Container Designs determine CSS classes on containers
        // The default/normal container
        "container": {
          "classes": "theme-container py-4 demo-module-[Module.Id] demo-page-[Page.Id]",
          "isPublished": [ null, "module-unpublished" ],
          "isAdmin": "theme-container-admin app-admin-modal",
          "id": "module-[Module.Id]"
        }
      }
    }
  },


  // ********************
  // Languages Configurations
  "Languages": {
    "Default": {
      "HideOthers": false,
      "Languages": {
        "en": {
          "Label": "ENG",
          "Description": "English (from JSON config)"
        },
        "de-CH": {
          "Label": "DEU"
        }
      },
      "Debug": {
        // "anonymous": false,
      }
    },
    "EnglishOnly": {
      "HideOthers": true,
      "Languages": {
        "en": {
          "Label": "English"
        }
      }
    }
  },


  // ********************
  // Menus contain the configuration for each menu. The names used are specified in the Razor files.
  "Menus": {
    // The default configuration is taken if no other configuration is used
    "Default": {
      "start": "*",
      "depth": 1
    },
    // This is used as the main-menu in the navigation with sidebar submenu
    "ToplevelOnly": {
      "start": "*",
      "depth": 1
    },
    // Main is usually used for the default, top-level menu
    "Main": {
      "start": "*",
      "depth": 2,
      // Example to enable debug just on this specific menu
      "debug": {
        "admin": true
      }
    },
    // Mobile is usually used for the default, top-level menu which only appears when the screen is too small
    "Mobile": {
      "template": "vertical",
      "start": "*",
      "depth": 2
    },
    // Sidebar is used in menus usually to the left of content
    "Sidebar": {
      "template": "vertical",
      "start": ".",
      "level": 1,
      "children": true,
      "depth": 2,
      "design": "Sidebar"
    },
    // Footer menu, would usually show Imprint, Terms, Privacy etc.
    // For the default values we're using Home "1" and Login (forced, even though it's set to not show in menus) "5!" as these are a few of the pages which always exist
    "Footer": {
      "start": "1, 5!"
    }
  },

  // ********************
  // Containers has properties / settings / values on containers which are not directly related to design
  // As of now there is no use for this, but the infrastructure exists
  "Containers": {
    "Default": {
    }
  },

  // ********************
  // MenuDesigns specify how the output is made, what classes added to each node etc.
  // It's separate from the Menus, since it could be re-used
  // It also supports two special placeholders [Page.Id] and [Menu.Id]
  "MenuDesigns": {
    // The default menu styling used for main and most menus
    // (unless specified otherwise)
    "Default": {
      "ul": {
        "byLevel": {
          "1": "navbar-nav test-[Page.Id] test-[Theme.Path]",
          "-1": "dropdown-menu"
        }
      },
      "li": {
        "classes": "nav-item nav-[Page.Id]",
        "hasChildren": "has-child dropdown",
        // "hasChildren": [null, "example"],
        "isActive": "active",
        //"isActive": ["active", "inactive"],
        "isDisabled": "disabled"
        // "isDisabled": ["disabled", "not-disabled"],
      },
      "a": {
        "isActive": "active",
        "hasChildren": "dropdown-toggle",
        "byLevel": {
          "2": "nav-link",
          "-1": "dropdown-item"
        }
      }
    },
    "Mobile": {
      "ul": {
        "byLevel": {
          "1": "navbar-nav",
          "-1": "collapse theme-submenu-[Menu.Id]-[Page.Id]"
        },
        "inBreadcrumb": "show"
      },
      "li": {
        "classes": "nav-item nav-[Page.Id] position-relative",
        "hasChildren": "has-child",
        "isActive": "active",
        "isDisabled": "disabled"
      },
      "a": {
        // NOTE: ATM this is the only difference to Sidebar
        "classes": "nav-link mobile-navigation-link",
        "isActive": "active"
      },
      "span": {
        "classes": "nav-item-sub-opener",
        "inBreadcrumb": [ null, "collapsed" ]
      },
      // Special target information (not really styling) usually on the span-tag
      "data-bs-target": ".theme-submenu-[Menu.Id]-[Page.Id]"
    },
    "Sidebar": {
      "ul": {
        "byLevel": {
          "1": "navbar-nav",
          "-1": "collapse theme-submenu-[Menu.Id]-[Page.Id]"
        },
        "inBreadcrumb": "show"
      },
      "li": {
        "classes": "nav-item nav-[Page.Id] position-relative",
        "hasChildren": "has-child",
        "isActive": "active",
        "isDisabled": "disabled"
      },
      "a": {
        "classes": "nav-link",
        "isActive": "active"
      },
      "span": {
        "classes": "nav-item-sub-opener",
        "inBreadcrumb": [ null, "collapsed" ]
      },
      "data-bs-target": ".theme-submenu-[Menu.Id]-[Page.Id]"
    },
    "Footer": {
      "ul": "navbar-nav test-wip-config"
    }
  }
}